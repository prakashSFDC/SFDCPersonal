<apex:page standardController="Account" sidebar="false" extensions="AutoComplete_AccSearch">
  
  <script type="text/javascript" src="{!URLFOR($Resource.autocompletejs)}" />
  <apex:stylesheet value="{!$Resource.autocompletecss}"/>  
  

  <style>
    .cField{
        width:300px;
    }
</style>

<script>

        //This is a small workaround for getting the component to work with the enter key
        //I'll include this behavior as part of the component in a next release
        function noenter(e){
 
             var key;    
             if(window.event)
                  key = window.event.keyCode; //IE
             else
                  key = e.which; //firefox    
        
             return (key != 13);    

        }
        
        function disableautocomplete() {
          var forms = document.getElementsByTagName('form');
          
          for (var i = 0; i < forms.length; ++i) {
            if (forms[i].setAttribute) {
              forms[i].setAttribute('autocomplete', 'off')
            } else {
              forms[i].autocomplete = 'off'
            }
          }
        }
        
        if (window.addEventListener) {
          window.addEventListener('load', disableautocomplete, true)
        } else if (window.attachEvent) {
          window.attachEvent('onload', disableautocomplete)
        } else {
          window.onload = disableautocomplete
        }
       
</script>

        <apex:form id="VFformid" >          

        <apex:pageBlock title="Account Display">        
           Account Name:  
         <apex:inputField onkeypress="return noenter(event)" value="{!Account.name}" id="accname" styleClass="cField">
            <c:autocomplete Width="300" ClassName="autocomplete" InputId="{!$Component.accname}" AutoCompleteId="accACid" ObjectName="Account" />
           </apex:inputField>
         
          <p><apex:commandButton action="{!doSearch}" value="Search">          
          </apex:commandButton></p>
          <center>
             <apex:dataTable value="{!accounts}" var="p" >
                 <apex:column headerValue="Account Name"><apex:outputText value="{!p.name}"></apex:outputText></apex:column>
                 <apex:column headerValue="Phone no"> <apex:outputText value="{!p.phone}"></apex:outputText></apex:column>
             </apex:dataTable>  
        </center>
        </apex:pageBlock>
    </apex:form>

</apex:page>